spring.mvc.view.prefix: /WEB-INF/views/
spring.mvc.view.suffix: .jsp
application.message: Hello Phil

logging.level.root: debug
#logging.level.org.hibernate.SQL: DEBUG
#log4j.logger.org.mybatis: DEBUG
#mybatis.config-location: classpath:mybatis-config.xml
#logging.level.root: WARN
#logging.level.mybatis.mapper: TRACE
spring:
  application:
    name: ProductService
  web:
    isCaptchaValidate: false

  datasource:
    core:
      #type: com.alibaba.druid.pool.DruidDataSource
      driverClassName: com.mysql.jdbc.Driver
      url: jdbc:mysql://10.1.2.51:3306/admin_boot?zeroDateTimeBehavior=convertToNull&useUnicode=true&characterEncoding=utf8
      username: root
      password: Mysql1
      # 下面为连接池的补充设置，应用到上面所有数据源中
      # 初始化大小，最小，最大
      initialSize: 5
      minIdle: 2
      maxActive: 20
      # 配置获取连接等待超时的时间
      maxWait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMilles: 300000
      validationQuery: SELECT 1
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      # 关闭PSCache
      poolPrepareStatements: false
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      filters: stat,wall
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      # 合并多个DruidDataSource的监控数据
      useGlobalDataSourceStat: true

server:
  port: 8999

